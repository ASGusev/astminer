import argparse
import numpy as np

from PathMinerLoader import PathMinerLoader


# This example assumes that you've already loaded and processed data with data_extraction.sh
# Example shows how to pass data generated by PathMiner to PyTorch Dataset for further convenient usage and build a
# classifier to solve a toy problem of distinguishing files between 2 projects.


# Add labels with project info to path contexts
def label_contexts(path_contexts):
    path_contexts['project'] = path_contexts['id'].map(lambda filename: 0 if 'project1' in filename else 1)


# Create training and validation samples from path contexts
def split_files(path_contexts, test_size=0.5):
    index = np.random.permutation(path_contexts.index)
    n_test = int(test_size * len(path_contexts))
    return index[:n_test], index[n_test:]


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('source_folder', type=str, help='Folder containing output of PathMiner')
    args = parser.parse_args()

    np.random.seed(42)

    loader = PathMinerLoader.from_folder(args.source_folder)
    label_contexts(loader.path_contexts)
    train_indices, test_indices = split_files(loader.path_contexts)
    print(train_indices, test_indices)
    print(loader.path_contexts.iloc[train_indices])
    print(loader.path_contexts.iloc[test_indices])
