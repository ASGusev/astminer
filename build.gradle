buildscript {
    ext.kotlin_version = '1.3.11'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'org.miningtool'
version = '0.1'

apply plugin: 'java'
apply plugin: 'antlr'
apply plugin: 'idea'

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'miningtool.MainKt'

defaultTasks 'run'

repositories {
    mavenLocal()
    mavenCentral()
}

/**
 * Without the next section Gradle will add a 'compile' dependency on Antlr3:
 * https://github.com/gradle/gradle/issues/820
 */
configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

def generatedSourcesPath = "src/main/generated"

dependencies {
    antlr "org.antlr:antlr4:4.7.1"
    compile "org.antlr:antlr4-runtime:4.7.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // https://mvnrepository.com/artifact/com.github.gumtreediff/core
    compile group: 'com.github.gumtreediff', name: 'core', version: '2.1.0'
    // https://mvnrepository.com/artifact/com.github.gumtreediff/client
    compile group: 'com.github.gumtreediff', name: 'client', version: '2.1.0'
    // https://mvnrepository.com/artifact/com.github.gumtreediff/gen.jdt
    compile group: 'com.github.gumtreediff', name: 'gen.jdt', version: '2.1.0'
    testCompile "junit:junit:4.11"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.10.2"
}

task processPyExample(type: JavaExec) {
    main = 'miningtool.examples.pyExample.PyExample'
    classpath = sourceSets.main.runtimeClasspath
}

task performanceTest(type: JavaExec) {
    main = 'miningtool.performance.PerformanceTest'
    classpath = sourceSets.main.runtimeClasspath
}

generateGrammarSource {
    maxHeapSize = "64m"
    exclude(["CoarseSimpleDecl.g4", "Common.g4", "Expressions.g4", "FineSimpleDecl.g4",
             "FunctionDef.g4", "ModuleLex.g4", "SimpleDecl.g4"])
    arguments += ['-package', 'me.vovak.antlr.parser']
    // Keep a copy of generated sources
    doLast {
        println "Copying generated grammar lexer/parser files to main directory."
        copy {
            from "${buildDir}/generated-src/antlr/main"
            into "${generatedSourcesPath}/me/vovak/antlr/parser"
        }
        file("${buildDir}/generated-src/antlr").deleteDir()
    }
    // Run when source dir has changed or was removed
    outputs.dir(generatedSourcesPath)
}

clean.doLast {
    file(generatedSourcesPath).deleteDir()
}

compileKotlin.dependsOn generateGrammarSource
compileJava.dependsOn generateGrammarSource

sourceSets.main.java.srcDir file(generatedSourcesPath)

idea {
    module {
        generatedSourceDirs += file(generatedSourcesPath)
    }
}


publishing {
    publications {
        miningtoolLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'miningtool'
            url = "file://${buildDir}/repo"
        }
    }
}